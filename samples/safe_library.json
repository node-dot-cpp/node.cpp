[
{
  "types" : [
    "NodeBase",
    "nodecpp::Buffer",
    "nodecpp::CircularByteBuffer",
    "nodecpp::Log",
    "nodecpp::MultiOwner",
    "nodecpp::Url",
    "nodecpp::UrlQuery",
    "nodecpp::UrlQueryItem",
    "nodecpp::awaitable",
    "nodecpp::net::Address",
    "nodecpp::net::HttpMessageBase",
    "nodecpp::net::HttpServer",
    "nodecpp::net::HttpServerBase",
    "nodecpp::net::HttpServerBase::a_request::connection_awaiter",
    "nodecpp::net::HttpServerResponse",
    "nodecpp::net::HttpServerResponse::HeaderHolder",
    "nodecpp::net::HttpSocket",
    "nodecpp::net::HttpSocketBase",
    "nodecpp::net::HttpSocketBase::a_continueGetting::continue_getting_awaiter",
    "nodecpp::net::HttpSocketBase::a_dataAvailable::data_awaiter",
    "nodecpp::net::IncomingHttpMessageAtServer",
    "nodecpp::net::ServerBase",
    "nodecpp::net::ServerBase::a_close::close_awaiter",
    "nodecpp::net::ServerBase::a_connection::connection_awaiter",
    "nodecpp::net::ServerBase::a_listen::listen_awaiter",
    "nodecpp::net::ServerSocket",
    "nodecpp::net::Socket",
    "nodecpp::net::SocketBase",
    "nodecpp::net::SocketBase::a_connect::connect_awaiter",
    "nodecpp::net::SocketBase::a_drain::drain_awaiter",
    "nodecpp::net::SocketBase::a_read::read_data_awaiter",
    "nodecpp::net::SocketBase::a_write::write_data_awaiter",
    "nodecpp::promise_type_struct",
    "safe_memory::basic_string",
    "safe_memory::basic_string_literal",
    "safe_memory::detail::hash_map",
    "safe_memory::detail::hashtable_const_iterator",
    "safe_memory::detail::hashtable_iterator",
    "safe_memory::detail::node_const_iterator",
    "safe_memory::detail::node_iterator",
    "safe_memory::detail::safe_iterator_impl",
    "safe_memory::detail::safe_iterator_no_checks",
    "safe_memory::hash",
    "safe_memory::string_literal",
    "safe_memory::vector",
    "std::__1::basic_string",
    "std::__1::fake",
    "std::__1::function",
    "std::__1::vector",
    "std::basic_string",
    "std::experimental::coroutine_handle",
    "std::experimental::coroutines_v1::coroutine_handle",
    "std::experimental::suspend_never",
    "std::fake",
    "std::function",
    "std::vector",
  ],
  "functions" : [
    "getArgv",
    "nodecpp::Buffer::append",
    "nodecpp::Buffer::appendString",
    "nodecpp::Buffer::appendUint8",
    "nodecpp::Buffer::begin",
    "nodecpp::Buffer::capacity",
    "nodecpp::Buffer::clear",
    "nodecpp::Buffer::clone",
    "nodecpp::Buffer::empty",
    "nodecpp::Buffer::end",
    "nodecpp::Buffer::operator=",
    "nodecpp::Buffer::popFront",
    "nodecpp::Buffer::readUInt32BE",
    "nodecpp::Buffer::readUInt32LE",
    "nodecpp::Buffer::readUInt8",
    "nodecpp::Buffer::reserve",
    "nodecpp::Buffer::set_size",
    "nodecpp::Buffer::size",
    "nodecpp::Buffer::trim",
    "nodecpp::Buffer::writeInt8",
    "nodecpp::Buffer::writeUInt32BE",
    "nodecpp::Buffer::writeUInt32LE",
    "nodecpp::Log::add",
    "nodecpp::Log::clear",
    "nodecpp::Log::debug",
    "nodecpp::Log::error",
    "nodecpp::Log::fatal",
    "nodecpp::Log::info",
    "nodecpp::Log::log",
    "nodecpp::Log::resetGuaranteedLevel",
    "nodecpp::Log::setGuaranteedLevel",
    "nodecpp::Log::setLevel",
    "nodecpp::Log::warning",
    "nodecpp::MultiOwner::add",
    "nodecpp::MultiOwner::clear",
    "nodecpp::MultiOwner::getCount",
    "nodecpp::MultiOwner::removeAndDelete",
    "nodecpp::Url::parseUrlQueryString",
    "nodecpp::UrlQuery::add",
    "nodecpp::UrlQuery::operator=",
    "nodecpp::UrlQuery::operator[]",
    "nodecpp::UrlQueryItem::add",
    "nodecpp::UrlQueryItem::operator=",
    "nodecpp::UrlQueryItem::toStr",
    "nodecpp::awaitable::await_ready",
    "nodecpp::awaitable::await_resume",
    "nodecpp::awaitable::await_suspend",
    "nodecpp::log::default_log::debug",
    "nodecpp::log::default_log::error",
    "nodecpp::log::default_log::fatal",
    "nodecpp::log::default_log::info",
    "nodecpp::log::default_log::log",
    "nodecpp::log::default_log::warning",
    "nodecpp::net::Address::operator==",
    "nodecpp::net::HttpMessageBase::parseConnStatus",
    "nodecpp::net::HttpMessageBase::parseContentLength",
    "nodecpp::net::HttpServerBase::a_request",
    "nodecpp::net::HttpServerBase::a_request::connection_awaiter::await_ready",
    "nodecpp::net::HttpServerBase::a_request::connection_awaiter::await_resume",
    "nodecpp::net::HttpServerBase::a_request::connection_awaiter::await_suspend",
    "nodecpp::net::HttpServerBase::addHttpHandler",
    "nodecpp::net::HttpServerBase::forceReleasingAllCoroHandles",
    "nodecpp::net::HttpServerBase::on",
    "nodecpp::net::HttpServerBase::onNewRequest",
    "nodecpp::net::HttpServerResponse::HeaderHolder::toStr",
    "nodecpp::net::HttpServerResponse::addHeader",
    "nodecpp::net::HttpServerResponse::clear",
    "nodecpp::net::HttpServerResponse::dbgTrace",
    "nodecpp::net::HttpServerResponse::end",
    "nodecpp::net::HttpServerResponse::flushHeaders",
    "nodecpp::net::HttpServerResponse::operator=",
    "nodecpp::net::HttpServerResponse::setStatus",
    "nodecpp::net::HttpServerResponse::writeBodyPart",
    "nodecpp::net::HttpServerResponse::writeHead",
    "nodecpp::net::HttpSocketBase::a_continueGetting",
    "nodecpp::net::HttpSocketBase::a_continueGetting::continue_getting_awaiter::await_ready",
    "nodecpp::net::HttpSocketBase::a_continueGetting::continue_getting_awaiter::await_resume",
    "nodecpp::net::HttpSocketBase::a_continueGetting::continue_getting_awaiter::await_suspend",
    "nodecpp::net::HttpSocketBase::a_dataAvailable",
    "nodecpp::net::HttpSocketBase::a_dataAvailable::data_awaiter::await_ready",
    "nodecpp::net::HttpSocketBase::a_dataAvailable::data_awaiter::await_resume",
    "nodecpp::net::HttpSocketBase::a_dataAvailable::data_awaiter::await_suspend",
    "nodecpp::net::HttpSocketBase::forceReleasingAllCoroHandles",
    "nodecpp::net::HttpSocketBase::proceedToNext",
    "nodecpp::net::HttpSocketBase::readLine",
    "nodecpp::net::HttpSocketBase::run",
    "nodecpp::net::IncomingHttpMessageAtServer::a_readBody",
    "nodecpp::net::IncomingHttpMessageAtServer::clear",
    "nodecpp::net::IncomingHttpMessageAtServer::dbgTrace",
    "nodecpp::net::IncomingHttpMessageAtServer::getContentLength",
    "nodecpp::net::IncomingHttpMessageAtServer::getHttpVersion",
    "nodecpp::net::IncomingHttpMessageAtServer::getMethod",
    "nodecpp::net::IncomingHttpMessageAtServer::getUrl",
    "nodecpp::net::IncomingHttpMessageAtServer::operator=",
    "nodecpp::net::IncomingHttpMessageAtServer::parseHeaderEntry",
    "nodecpp::net::IncomingHttpMessageAtServer::parseMethod",
    "nodecpp::net::ServerBase::a_close",
    "nodecpp::net::ServerBase::a_close::close_awaiter::await_ready",
    "nodecpp::net::ServerBase::a_close::close_awaiter::await_resume",
    "nodecpp::net::ServerBase::a_close::close_awaiter::await_suspend",
    "nodecpp::net::ServerBase::a_connection",
    "nodecpp::net::ServerBase::a_connection::connection_awaiter::await_ready",
    "nodecpp::net::ServerBase::a_connection::connection_awaiter::await_resume",
    "nodecpp::net::ServerBase::a_connection::connection_awaiter::await_suspend",
    "nodecpp::net::ServerBase::a_listen",
    "nodecpp::net::ServerBase::a_listen::listen_awaiter::await_ready",
    "nodecpp::net::ServerBase::a_listen::listen_awaiter::await_resume",
    "nodecpp::net::ServerBase::a_listen::listen_awaiter::await_suspend",
    "nodecpp::net::ServerBase::addHandler",
    "nodecpp::net::ServerBase::address",
    "nodecpp::net::ServerBase::close",
    "nodecpp::net::ServerBase::closeByWorkingCluster",
    "nodecpp::net::ServerBase::closingProcedure",
    "nodecpp::net::ServerBase::emitClose",
    "nodecpp::net::ServerBase::emitConnection",
    "nodecpp::net::ServerBase::emitError",
    "nodecpp::net::ServerBase::emitListening",
    "nodecpp::net::ServerBase::forceReleasingAllCoroHandles",
    "nodecpp::net::ServerBase::getSockCount",
    "nodecpp::net::ServerBase::listen",
    "nodecpp::net::ServerBase::listening",
    "nodecpp::net::ServerBase::on",
    "nodecpp::net::ServerBase::once",
    "nodecpp::net::ServerBase::ref",
    "nodecpp::net::ServerBase::registerServer",
    "nodecpp::net::ServerBase::removeSocket",
    "nodecpp::net::ServerBase::reportAllAceptedConnectionsEnded",
    "nodecpp::net::ServerBase::reportBeingDestructed",
    "nodecpp::net::ServerBase::unref",
    "nodecpp::net::SocketBase::a_connect",
    "nodecpp::net::SocketBase::a_connect::connect_awaiter::await_ready",
    "nodecpp::net::SocketBase::a_connect::connect_awaiter::await_resume",
    "nodecpp::net::SocketBase::a_connect::connect_awaiter::await_suspend",
    "nodecpp::net::SocketBase::a_drain",
    "nodecpp::net::SocketBase::a_drain::drain_awaiter::await_ready",
    "nodecpp::net::SocketBase::a_drain::drain_awaiter::await_resume",
    "nodecpp::net::SocketBase::a_drain::drain_awaiter::await_suspend",
    "nodecpp::net::SocketBase::a_read",
    "nodecpp::net::SocketBase::a_read::read_data_awaiter::await_ready",
    "nodecpp::net::SocketBase::a_read::read_data_awaiter::await_resume",
    "nodecpp::net::SocketBase::a_read::read_data_awaiter::await_suspend",
    "nodecpp::net::SocketBase::a_write",
    "nodecpp::net::SocketBase::a_write::write_data_awaiter::await_ready",
    "nodecpp::net::SocketBase::a_write::write_data_awaiter::await_resume",
    "nodecpp::net::SocketBase::a_write::write_data_awaiter::await_suspend",
    "nodecpp::net::SocketBase::addHandler",
    "nodecpp::net::SocketBase::bufferSize",
    "nodecpp::net::SocketBase::bytesRead",
    "nodecpp::net::SocketBase::bytesWritten",
    "nodecpp::net::SocketBase::connect",
    "nodecpp::net::SocketBase::connecting",
    "nodecpp::net::SocketBase::destroy",
    "nodecpp::net::SocketBase::destroyed",
    "nodecpp::net::SocketBase::emitAccepted",
    "nodecpp::net::SocketBase::emitClose",
    "nodecpp::net::SocketBase::emitConnect",
    "nodecpp::net::SocketBase::emitData",
    "nodecpp::net::SocketBase::emitDrain",
    "nodecpp::net::SocketBase::emitEnd",
    "nodecpp::net::SocketBase::emitError",
    "nodecpp::net::SocketBase::end",
    "nodecpp::net::SocketBase::forceReleasingAllCoroHandles",
    "nodecpp::net::SocketBase::localAddress",
    "nodecpp::net::SocketBase::localIP",
    "nodecpp::net::SocketBase::localPort",
    "nodecpp::net::SocketBase::on",
    "nodecpp::net::SocketBase::once",
    "nodecpp::net::SocketBase::pause",
    "nodecpp::net::SocketBase::ref",
    "nodecpp::net::SocketBase::remoteAddress",
    "nodecpp::net::SocketBase::remoteFamily",
    "nodecpp::net::SocketBase::remoteIP",
    "nodecpp::net::SocketBase::remotePort",
    "nodecpp::net::SocketBase::reportBeingDestructed",
    "nodecpp::net::SocketBase::resume",
    "nodecpp::net::SocketBase::setKeepAlive",
    "nodecpp::net::SocketBase::setNoDelay",
    "nodecpp::net::SocketBase::unref",
    "nodecpp::net::SocketBase::write",
    "nodecpp::net::createHttpServer",
    "nodecpp::net::createServer",
    "nodecpp::net::createSocket",
    "nodecpp::promise_type_struct::get_return_object",
    "nodecpp::promise_type_struct::return_value",
    "nodecpp::promise_type_struct::return_void",
    "nodecpp::promise_type_struct::unhandled_exception",
    "nodecpp::wait_for_all",
    "safe_memory::basic_string::append",
    "safe_memory::basic_string::append_convert",
    "safe_memory::basic_string::assign",
    "safe_memory::basic_string::assign_convert",
    "safe_memory::basic_string::at",
    "safe_memory::basic_string::back",
    "safe_memory::basic_string::begin",
    "safe_memory::basic_string::capacity",
    "safe_memory::basic_string::cbegin",
    "safe_memory::basic_string::cend",
    "safe_memory::basic_string::clear",
    "safe_memory::basic_string::compare",
    "safe_memory::basic_string::crbegin",
    "safe_memory::basic_string::crend",
    "safe_memory::basic_string::empty",
    "safe_memory::basic_string::end",
    "safe_memory::basic_string::erase",
    "safe_memory::basic_string::find",
    "safe_memory::basic_string::find_first_not_of",
    "safe_memory::basic_string::find_first_of",
    "safe_memory::basic_string::find_last_not_of",
    "safe_memory::basic_string::find_last_of",
    "safe_memory::basic_string::force_size",
    "safe_memory::basic_string::front",
    "safe_memory::basic_string::hash",
    "safe_memory::basic_string::insert",
    "safe_memory::basic_string::left",
    "safe_memory::basic_string::length",
    "safe_memory::basic_string::ltrim",
    "safe_memory::basic_string::make_lower",
    "safe_memory::basic_string::make_upper",
    "safe_memory::basic_string::max_size",
    "safe_memory::basic_string::operator+=",
    "safe_memory::basic_string::operator=",
    "safe_memory::basic_string::operator[]",
    "safe_memory::basic_string::pop_back",
    "safe_memory::basic_string::push_back",
    "safe_memory::basic_string::rbegin",
    "safe_memory::basic_string::rend",
    "safe_memory::basic_string::replace",
    "safe_memory::basic_string::reserve",
    "safe_memory::basic_string::resize",
    "safe_memory::basic_string::rfind",
    "safe_memory::basic_string::right",
    "safe_memory::basic_string::rtrim",
    "safe_memory::basic_string::set_capacity",
    "safe_memory::basic_string::shrink_to_fit",
    "safe_memory::basic_string::size",
    "safe_memory::basic_string::substr",
    "safe_memory::basic_string::swap",
    "safe_memory::basic_string::trim",
    "safe_memory::basic_string_literal::basic_string_literal",
    "safe_memory::basic_string_literal::c_str",
    "safe_memory::basic_string_literal::operator!=",
    "safe_memory::basic_string_literal::operator=",
    "safe_memory::basic_string_literal::operator==",
    "safe_memory::detail::distance",
    "safe_memory::detail::hash_map::at",
    "safe_memory::detail::hash_map::begin",
    "safe_memory::detail::hash_map::bucket_count",
    "safe_memory::detail::hash_map::bucket_size",
    "safe_memory::detail::hash_map::cbegin",
    "safe_memory::detail::hash_map::cend",
    "safe_memory::detail::hash_map::clear",
    "safe_memory::detail::hash_map::count",
    "safe_memory::detail::hash_map::emplace",
    "safe_memory::detail::hash_map::emplace_hint",
    "safe_memory::detail::hash_map::empty",
    "safe_memory::detail::hash_map::end",
    "safe_memory::detail::hash_map::equal_range",
    "safe_memory::detail::hash_map::erase",
    "safe_memory::detail::hash_map::find",
    "safe_memory::detail::hash_map::insert",
    "safe_memory::detail::hash_map::insert_or_assign",
    "safe_memory::detail::hash_map::load_factor",
    "safe_memory::detail::hash_map::operator=",
    "safe_memory::detail::hash_map::operator[]",
    "safe_memory::detail::hash_map::rehash",
    "safe_memory::detail::hash_map::reserve",
    "safe_memory::detail::hash_map::size",
    "safe_memory::detail::hash_map::swap",
    "safe_memory::detail::hash_map::try_emplace",
    "safe_memory::detail::hashtable_const_iterator::hashtable_const_iterator",
    "safe_memory::detail::hashtable_const_iterator::operator!=",
    "safe_memory::detail::hashtable_const_iterator::operator*",
    "safe_memory::detail::hashtable_const_iterator::operator++",
    "safe_memory::detail::hashtable_const_iterator::operator->",
    "safe_memory::detail::hashtable_const_iterator::operator=",
    "safe_memory::detail::hashtable_const_iterator::operator==",
    "safe_memory::detail::hashtable_iterator::operator!=",
    "safe_memory::detail::hashtable_iterator::operator*",
    "safe_memory::detail::hashtable_iterator::operator++",
    "safe_memory::detail::hashtable_iterator::operator->",
    "safe_memory::detail::hashtable_iterator::operator=",
    "safe_memory::detail::hashtable_iterator::operator==",
    "safe_memory::detail::node_const_iterator::node_const_iterator",
    "safe_memory::detail::node_const_iterator::operator!=",
    "safe_memory::detail::node_const_iterator::operator*",
    "safe_memory::detail::node_const_iterator::operator++",
    "safe_memory::detail::node_const_iterator::operator->",
    "safe_memory::detail::node_const_iterator::operator=",
    "safe_memory::detail::node_const_iterator::operator==",
    "safe_memory::detail::node_iterator::operator!=",
    "safe_memory::detail::node_iterator::operator*",
    "safe_memory::detail::node_iterator::operator++",
    "safe_memory::detail::node_iterator::operator->",
    "safe_memory::detail::node_iterator::operator==",
    "safe_memory::detail::safe_iterator_impl::operator!=",
    "safe_memory::detail::safe_iterator_impl::operator*",
    "safe_memory::detail::safe_iterator_impl::operator+",
    "safe_memory::detail::safe_iterator_impl::operator++",
    "safe_memory::detail::safe_iterator_impl::operator+=",
    "safe_memory::detail::safe_iterator_impl::operator-",
    "safe_memory::detail::safe_iterator_impl::operator--",
    "safe_memory::detail::safe_iterator_impl::operator-=",
    "safe_memory::detail::safe_iterator_impl::operator->",
    "safe_memory::detail::safe_iterator_impl::operator<",
    "safe_memory::detail::safe_iterator_impl::operator<=",
    "safe_memory::detail::safe_iterator_impl::operator=",
    "safe_memory::detail::safe_iterator_impl::operator==",
    "safe_memory::detail::safe_iterator_impl::operator>",
    "safe_memory::detail::safe_iterator_impl::operator>=",
    "safe_memory::detail::safe_iterator_impl::operator[]",
    "safe_memory::detail::safe_iterator_no_checks::operator!=",
    "safe_memory::detail::safe_iterator_no_checks::operator*",
    "safe_memory::detail::safe_iterator_no_checks::operator+",
    "safe_memory::detail::safe_iterator_no_checks::operator++",
    "safe_memory::detail::safe_iterator_no_checks::operator+=",
    "safe_memory::detail::safe_iterator_no_checks::operator-",
    "safe_memory::detail::safe_iterator_no_checks::operator--",
    "safe_memory::detail::safe_iterator_no_checks::operator-=",
    "safe_memory::detail::safe_iterator_no_checks::operator->",
    "safe_memory::detail::safe_iterator_no_checks::operator<",
    "safe_memory::detail::safe_iterator_no_checks::operator<=",
    "safe_memory::detail::safe_iterator_no_checks::operator=",
    "safe_memory::detail::safe_iterator_no_checks::operator==",
    "safe_memory::detail::safe_iterator_no_checks::operator>",
    "safe_memory::detail::safe_iterator_no_checks::operator>=",
    "safe_memory::detail::safe_iterator_no_checks::operator[]",
    "safe_memory::hash::operator()",
    "safe_memory::operator!=",
    "safe_memory::operator<",
    "safe_memory::operator<=",
    "safe_memory::operator==",
    "safe_memory::operator>",
    "safe_memory::operator>=",
    "safe_memory::string_literal::operator=",
    "safe_memory::swap",
    "safe_memory::vector::assign",
    "safe_memory::vector::at",
    "safe_memory::vector::back",
    "safe_memory::vector::begin",
    "safe_memory::vector::capacity",
    "safe_memory::vector::cbegin",
    "safe_memory::vector::cend",
    "safe_memory::vector::clear",
    "safe_memory::vector::crbegin",
    "safe_memory::vector::crend",
    "safe_memory::vector::emplace",
    "safe_memory::vector::emplace_back",
    "safe_memory::vector::empty",
    "safe_memory::vector::end",
    "safe_memory::vector::erase",
    "safe_memory::vector::front",
    "safe_memory::vector::insert",
    "safe_memory::vector::max_size",
    "safe_memory::vector::operator=",
    "safe_memory::vector::operator[]",
    "safe_memory::vector::pop_back",
    "safe_memory::vector::push_back",
    "safe_memory::vector::rbegin",
    "safe_memory::vector::rend",
    "safe_memory::vector::reserve",
    "safe_memory::vector::resize",
    "safe_memory::vector::shrink_to_fit",
    "safe_memory::vector::size",
    "safe_memory::vector::swap",
    "std::__1::basic_string::size",
    "std::__1::basic_string::substr",
    "std::__1::forward",
    "std::__1::function::operator=",
    "std::__1::move",
    "std::__1::operator==",
    "std::__1::vector::operator[]",
    "std::__1::vector::size",
    "std::basic_string::size",
    "std::basic_string::substr",
    "std::experimental::coroutine_handle::from_address",
    "std::experimental::coroutines_v1::operator!=",
    "std::experimental::suspend_never::await_ready",
    "std::experimental::suspend_never::await_resume",
    "std::experimental::suspend_never::await_suspend",
    "std::forward",
    "std::function::operator=",
    "std::move",
    "std::operator==",
    "std::vector::operator[]",
    "std::vector::size",
  ]
}
]
